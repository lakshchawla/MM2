var express = require("express");
var app = express();
var bodyParser = require("body-parser");
var mongoose = require("mongoose");

var fs = require("fs");
var path = require("path");
require("dotenv/config");

mongoose.connect(
  "mongodb+srv://lakshay:lakshay@cluster0.as40i.mongodb.net/file_upload?retryWrites=true&w=majority",
  { useNewUrlParser: true, useUnifiedTopology: true },
  (err) => {
    console.log("connected");
  }
);

var imageSchema = new mongoose.Schema({
  img: { 
    data: Buffer,
    contentType: String,
  },
});

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

app.set("view engine", "ejs");

var multer = require("multer");
var storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads");
  },
  filename: (req, file, cb) => {
    cb(null, file.fieldname + "-" + Date.now());
  },
});

var upload = multer({ storage: storage });

var imgModel = new mongoose.model("Image", imageSchema);

app.get("/", (req, res) => {
  res.render("main");
});

app.post("/", upload.single("image"), (req, res, next) => {
  var obj = {
    img: {
      data: fs.readFileSync(
        path.join("mongodb+srv://lakshay:lakshay@cluster0.as40i.mongodb.net/file_upload" + "/uploads/" + req.file.filename)
      ),
      contentType: "image/png",
    },
  };
  
  imgModel.create(obj, (err, item) => {
    if (err) {
      console.log(err);
    } else {
      // item.save();
      res.redirect("/");
    }
  });
});

app.listen(process.env.PORT || "3000", (err) => {
  if (err) throw err;
  console.log("Server listening");
});
